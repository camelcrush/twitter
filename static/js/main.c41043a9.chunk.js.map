{"version":3,"sources":["firebase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","Profile","userObj","refreshUser","useState","displayName","newDisplayName","setNewDisplayName","navigate","useNavigate","onSubmit","event","a","preventDefault","updateProfile","currentUser","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onClickDelete","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","alt","src","faTrash","faPencilAlt","TweetFactory","tweet","setTweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","console","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","q","query","orderBy","onSnapshot","snapshot","tweetArray","docs","map","data","Navigation","display","justifyContent","marginRight","to","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","element","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c41043a9.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\n\nexport const auth = getAuth();\n\nexport const db = getFirestore();\n\nexport const storage = getStorage();\n","import { auth } from \"firebase\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateProfile } from \"firebase/auth\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const navigate = useNavigate();\n  const onLogOut = () => {\n    auth.signOut();\n    navigate(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(auth.currentUser, {\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOut}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"@firebase/auth\";\nimport { auth } from \"firebase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await createUserWithEmailAndPassword(auth, email, password);\n      } else {\n        await signInWithEmailAndPassword(auth, email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          required\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          required\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Crerate Account\" : \"Log In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport {\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport { auth } from \"firebase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n    await signInWithPopup(auth, provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { db, storage } from \"firebase\";\nimport { deleteObject, ref } from \"firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n  const onClickDelete = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n    if (ok) {\n      await deleteDoc(doc(db, \"tweets\", `${tweetObj.id}`));\n      if (tweetObj.attachmentUrl !== \"\") {\n        await deleteObject(ref(storage, tweetObj.attachmentUrl));\n      }\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onChage = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewTweet(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await updateDoc(doc(db, \"tweets\", `${tweetObj.id}`), {\n      text: newTweet,\n    });\n    setEditing(false);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              onChange={onChage}\n              placeholder=\"Edit your tweet\"\n              autoFocus\n              value={newTweet}\n              required\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n          {tweetObj.attachmentUrl && (\n            <img alt=\"\" src={tweetObj.attachmentUrl} />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onClickDelete}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import React, { useState } from \"react\";\nimport { db, storage } from \"firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({ userObj }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (tweet === \"\") {\n      return;\n    }\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    event.preventDefault();\n    try {\n      await addDoc(collection(db, \"tweets\"), tweetObj);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n    setTweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={tweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            alt=\"\"\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default TweetFactory;\n","import Tweet from \"components/Tweet\";\nimport TweetFactory from \"components/TweetFactory\";\nimport { db } from \"firebase\";\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\n\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    const q = query(collection(db, \"tweets\"), orderBy(\"createdAt\", \"desc\"));\n    onSnapshot(q, (snapshot) => {\n      const tweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTweets(tweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link style={{ marginRight: 10 }} to=\"/\">\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Profile from \"routes/Profile\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <div\n        style={{\n          maxWidth: 890,\n          width: \"100%\",\n          margin: \"0 auto\",\n          marginTop: 80,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Routes>\n          {isLoggedIn ? (\n            <>\n              <Route exact path=\"/\" element={<Home userObj={userObj} />} />\n              <Route\n                exact\n                path=\"/profile\"\n                element={\n                  <Profile userObj={userObj} refreshUser={refreshUser} />\n                }\n              />\n            </>\n          ) : (\n            <Route exact path=\"/\" element={<Auth />} />\n          )}\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { updateProfile } from \"@firebase/auth\";\nimport { auth } from \"firebase\";\nimport React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = auth.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}